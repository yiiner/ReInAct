@use "./vars" as *;
@mixin container-base() {
    width: 100%;
    height: 100%;
}

@mixin flex-box($direction: row) {
    display: flex;
    flex-direction: $direction;
}

@mixin icon-style($size: $icon-size-regular, $color: $primary-color) {
    width: $size;
    height: $size;
    fill: $color;
    cursor: pointer;
    transition: all 0.2s ease-out;
    &:hover {
        background-color: $color;
        fill: black;
    }
}

@mixin fancier-scroll-bar() {
    /* This targets the scrollbar in Webkit browsers */
    &::-webkit-scrollbar {
        width: 5px; /* Change this value to adjust the width */
        height: 5px; /* Adjust height for horizontal scrollbars, if necessary */
        border-radius: 5px;
    }

    /* Optional: style the scrollbar track (background) */
    &::-webkit-scrollbar-track {
        background: #f1f1f1; /* Track color */
    }

    /* Optional: style the scrollbar handle */
    &::-webkit-scrollbar-thumb {
        background: #888; /* Handle color */
    }

    /* Optional: style the scrollbar handle on hover */
    &::-webkit-scrollbar-thumb:hover {
        background: #555; /* Handle color on hover */
    }
}
@mixin hide-scroll-bar() {
    /* This applies to Chrome, Safari, and newer Edge versions */
    &::-webkit-scrollbar {
        display: none; /* Hides the scrollbar in Webkit-based browsers */
    }
    /* This applies to Firefox */
    scrollbar-width: none; /* This will hide the scrollbar in Firefox */
    /* This applies to Internet Explorer and older Edge versions */
    -ms-overflow-style: none; /* This will hide scrollbars in IE and Edge */
    /* General styles for the element */
    overflow: auto; /* Enables scrolling even when scrollbars are hidden */
}

@mixin router-animation() {
    .route-enter-from {
        opacity: 0;
        transform: translateY(-30px);
    }
    .route-leave-to {
        opacity: 0;
        transform: translateY(30px);
    }

    .route-enter-to,
    .route-leave-from {
        opacity: 1;
        transform: translateY(0);
    }

    .route-enter-active {
        transition: all 0.3s ease-out;
    }

    .route-leave-active {
        transition: all 0.3s ease-in;
    }
}

@mixin list-animation() {
    .list-move, /* apply transition to moving elements */
  .list-enter-active,
  .list-leave-active {
        transition: all 0.3s ease;
    }

    .list-enter-from {
        opacity: 0;
        transform: translateX(-3rem);
    }
    .list-enter-to,
    .list-leave-from {
        opacity: 1;
        transform: translateX(0px);
    }
    .list-leave-to {
        opacity: 0;
        transform: translateX(3rem);
    }

    /* ensure leaving items are taken out of layout flow so that moving
     animations can be calculated correctly. */
    .list-leave-active {
        position: absolute;
    }
}

@mixin slide-animation($direction: 1) {
    .slide-enter-active {
        transition: all 70ms ease-out;
    }

    .slide-leave-active {
        transition: all 70ms ease-in;
    }

    .slide-enter-from,
    .slide-leave-to {
        transform: translateX(calc($direction * 20rem));
        visibility: hidden;
    }

    .slide-enter-to,
    .slide-leave-from {
        transform: translateX(0);
        visibility: visible;
    }
}
@mixin pop-animation() {
    .pop-enter-active {
        transition: all 100ms ease-out;
    }

    .pop-leave-active {
        transition: all 100ms ease-in;
    }

    .pop-enter-from,
    .pop-leave-to {
        transform: translateY(20rem);
        visibility: hidden;
    }

    .pop-enter-to,
    .pop-leave-from {
        transform: translateY(0);
        visibility: visible;
    }
}
@mixin drop-animation() {
    .drop-enter-active {
        transition: all 100ms ease-out;
    }

    .drop-leave-active {
        transition: all 100ms ease-in;
    }

    .drop-enter-from,
    .drop-leave-to {
        transform: translateY(-20rem);
        visibility: hidden;
    }

    .drop-enter-to,
    .drop-leave-from {
        transform: translateY(0);
        visibility: visible;
    }
}
